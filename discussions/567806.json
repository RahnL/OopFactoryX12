[
  {
    "Id": "1306002",
    "ThreadId": "567806",
    "Html": "Hi All,<br />\nI want to develop below features :<br />\n<ol>\n<li>Create 270 Request which is byte encoded and a web service method is called to send the request. </li>\n<li>Parse 271 Response which the web service responds to the 270 request stating the error if there is in the request and the 271 response if the request is error free </li>\n<li>\nThe 271 response is byte decoded and parsed to display the eligibility information on the web page <br />\n</li>\n</ol>\nCan somebody help me on this? Mainly on decoding 271 response part....<br />\n",
    "PostedDate": "2014-09-18T09:56:19.11-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1328446",
    "ThreadId": "567806",
    "Html": "Were you able to use this X12 Parser for your needs?<br />\n<br />\nI see Create270Test in C:\\Projects\\OopFactory\\src\\trunk\\tests\\OopFactory.X12.Tests.Unit\\DocumentationCodeSamples\\X12InterchangeModel\\ReadingAnExistingX12File.cs<br />\n<br />\nHow did you create your 270 request?<br />\n",
    "PostedDate": "2014-12-03T08:59:53.327-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1328713",
    "ThreadId": "567806",
    "Html": "Hi GaltSalt, \r<br />\n<br />\npublic class Generate270<br />\n<pre><code>{\n    const string _MsgVersion = &quot;005010X279A1&quot;;\n\n    //Parse the X12 string to XML for processing\n    X12Parser parser = new X12Parser();\n    Interchange ichg270Msg;\n    FunctionGroup ichgFuncGrp;\n    Transaction _270trans;\n\n    public static string GenerateTestMsg(IList&lt;string&gt; lstInput)\n    {\n        string[] arrInputStr = lstInput.ToArray();\n        DateTime curDateTime = DateTime.Now;           \n        string _senderID = &quot;V139534        &quot;;\n        string _receiverID = &quot;89070&quot;;\n        int controlNo = 789;\n\n        //Parse the X12 string to XML for processing\n        X12Parser parser = new X12Parser();\n        Interchange ichg270Msg;\n        FunctionGroup ichgFuncGrp;\n        Transaction _270trans;\n\n\n        //Set the ISA Segment\n        ichg270Msg = new Interchange(curDateTime, controlNo, false);\n        ichg270Msg.InterchangeSenderIdQualifier = &quot;ZZ&quot;;\n        ichg270Msg.InterchangeSenderId = _senderID;\n        ichg270Msg.InterchangeReceiverIdQualifier = &quot;ZZ&quot;;\n        ichg270Msg.InterchangeReceiverId = _receiverID;\n        ichg270Msg.SetElement(12, &quot;00501&quot;);                         //EDI Version\n        ichg270Msg.SetElement(15, &quot;P&quot;);\n        ichg270Msg.SetElement(16, &quot;:&quot;);\n\n        ichgFuncGrp = ichg270Msg.AddFunctionGroup(&quot;HS&quot;, curDateTime, 1, _MsgVersion);\n        ichgFuncGrp.ApplicationSendersCode = _senderID;\n        ichgFuncGrp.ApplicationReceiversCode = _receiverID;\n        ichgFuncGrp.ControlNumber = controlNo;\n\n        //Create new function group for this message\n        _270trans = ichgFuncGrp.AddTransaction(&quot;270&quot;, controlNo.ToString().Length &lt; 4 ? controlNo.ToString().PadLeft(4, '0') : controlNo.ToString());\n\n        //Add BHT Segment\n        Segment segBHT = _270trans.AddSegment(&quot;BHT&quot;);\n        segBHT.SetElement(1, &quot;0022&quot;);\n        segBHT.SetElement(2, &quot;13&quot;);                                     //13 = request identification\n        segBHT.SetElement(3, controlNo.ToString());\n        segBHT.SetElement(4, curDateTime.ToString(&quot;yyyyMMdd&quot;));\n        segBHT.SetElement(5, curDateTime.ToString(&quot;HHmm&quot;));\n\n        //Add Hierarchical Loop 2000A - payer source\n        HierarchicalLoop hl2000A = _270trans.AddHLoop(&quot;1&quot;, &quot;20&quot;, true);\n\n        //Identifier eligibility or benefit information source \n        //Loop 2100A\n        Loop payer2100A = hl2000A.AddLoop(&quot;NM1*PR*2&quot;);                  //PR = Payer, 2 = Non-Person\n        payer2100A.SetElement(3, &quot;UNITED CONCORDIA&quot;);\n        payer2100A.SetElement(8, &quot;PI&quot;); //Federal Tax ID                                \n        payer2100A.SetElement(9, _receiverID); //Indicates next field is payoer ID\n\n        //Add Hierarchical Loop 2000B - Provider\n        HierarchicalLoop hl2000B = hl2000A.AddHLoop(&quot;2&quot;, &quot;21&quot;, true);\n        //Loop 2100B*\n        Loop receiverSource = hl2000B.AddLoop(&quot;NM1*1P*1&quot;);      //1P = Provider, 1 = Person\n        receiverSource.SetElement(3, &quot;Walnut Creek Dental Group and Orthodontics, LLP&quot;);\n        receiverSource.SetElement(4, &quot;Rodgers&quot;); \n        receiverSource.SetElement(8, &quot;XX&quot;); //FNATIONAL PROVIDER ID  \n        receiverSource.SetElement(9, &quot;1487891305&quot;);// NPI Information Receiver Identification Number\n        receiverSource.AddSegment(&quot;REF*&quot; + &quot;TJ*&quot; + &quot;262948041&quot;);// Provider's TIN\n        //receiverSource.AddSegment(&quot;REF*&quot; + &quot;Q4*&quot; + &quot;BK9111840&quot;);           \n\n\n        //Add Hierarchical Loop 2000C - subscriber information\n        HierarchicalLoop hl2000C = hl2000B.AddHLoop(&quot;3&quot;, &quot;22&quot;, true);\n        //TRN*1*171107529*9CT EXAMPLE*TRADINGPARTNER\n        Segment segTRN = hl2000C.AddSegment(&quot;TRN&quot;);\n        segTRN.SetElement(1,&quot;1&quot;);\n        segTRN.SetElement(2, &quot;171107529&quot;);\n        segTRN.SetElement(3, &quot;1234567890&quot;);\n\n        //Add trace number?\n        Loop subscriber = hl2000C.AddLoop(&quot;NM1*IL*1&quot;);          //1P = Provider, 1 = Person\n        subscriber.SetElement(3, &quot;STRITZEL&quot;); //PatientLN arrInputStr[1]\n        subscriber.SetElement(4, &quot;CHELSEA&quot;); //PatientFN\n        subscriber.SetElement(8, &quot;MI&quot;);\n        subscriber.SetElement(9, &quot;117702881001&quot;); //SSN number or Subscriber id\n        subscriber.AddSegment(&quot;N3*&quot; + &quot;9098 W 88TH CIR&quot;);        //could add line 2 here as well\n        subscriber.AddSegment(string.Format(&quot;N4*{0}*{1}*{2}&quot;, &quot;WESTMINSTER&quot;, &quot;CO&quot;, &quot;80021&quot;));//Subscriber City Name/State Code/Postal Zone or ZIP Code\n        subscriber.AddSegment(&quot;DMG*D8*&quot; + &quot;19900215&quot;); //Date of Birth arrInputStr[2]\n        subscriber.AddSegment(&quot;DTP*291*D8*&quot; + &quot;20141006&quot;); //Date of Appointmante/Service //Might need to make sure this has value! arrInputStr[7]\n        subscriber.AddLoop(&quot;EQ*&quot; + &quot;35&quot;);              //Information Request\n\n        string results = ichg270Msg.SerializeToX12(true);\n        return results;\n        //System.Diagnostics.Debug.WriteLine(results);\n    }\n}</code></pre>\n\n",
    "PostedDate": "2014-12-04T03:52:41.017-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1328755",
    "ThreadId": "567806",
    "Html": "Wow - I'll review this and see how it matches up. We just bought the 5010 schema, but I assume that you've already validated against that. I'll need to update areas for my trading partner details, and it should be ok... I'll let you know.<br />\n<br />\n<br />\n<br />\nThank you!<br />\n",
    "PostedDate": "2014-12-04T06:46:02.13-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]